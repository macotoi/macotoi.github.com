<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: github | macotoi.github.com]]></title>
  <link href="http://macotoi.github.com/blog/categories/github/atom.xml" rel="self"/>
  <link href="http://macotoi.github.com/"/>
  <updated>2012-07-01T16:09:46+09:00</updated>
  <id>http://macotoi.github.com/</id>
  <author>
    <name><![CDATA[macotoi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OS X Lion で Octopress + GitHub Pages をセットアップした手順メモ]]></title>
    <link href="http://macotoi.github.com/blog/2012/06/30/install-octopress/"/>
    <updated>2012-06-30T22:24:00+09:00</updated>
    <id>http://macotoi.github.com/blog/2012/06/30/install-octopress</id>
    <content type="html"><![CDATA[<p><img src="https://dl.dropbox.com/u/163758/blog/octopress.png" alt="Octopress" /></p>

<h2>環境</h2>

<ul>
<li>Mac OS X Lion 10.7.3 (11D50b)</li>
<li>Xcode 4.3.2</li>
</ul>


<p>上記の環境で Octopress を使用して GitHub Pages に上げてみました。
その手順を記録したので公開します。</p>

<ol>
<li>Rubyの環境整備</li>
<li>Octopress のインストール</li>
<li>GitHub Pages のセットアップ</li>
<li>GitHub Pages との関連付け</li>
<li>SSH公開鍵の登録</li>
<li>ブログの基本設定</li>
<li>新規投稿と更新</li>
</ol>


<h2>Ruby の環境整備</h2>

<p>上述の環境でデフォルトでインストールされている Ruby では 1.8.7 ですが、Octropress を利用するには Ruby 1.9.2 以上が必要です。そのため、RVM を使って、サポートされた新しいバージョンをインストールします。
ここでは、RVM の GUI フロントエンド <a href="http://unfiniti.com/software/mac/jewelrybox/">JewelryBox</a> を使用しました。</p>

<p><img src="https://dl.dropbox.com/u/163758/blog/jb-install.png" alt="Setup" /></p>

<p>RVM がインストールされていない場合上記のように検出し、セットアップ時にインストールしてくれます。</p>

<p><img src="https://dl.dropbox.com/u/163758/blog/jb-install-192.png" alt="Install 1.9.2p290" /></p>

<p>次に Add Ruby を選択し、Octropress の対応しているバージョンの Ruby をインストールします。ここでは、動作実績のあった 1.9.2p290 を選択しました。Make Default もチェックしておきます。</p>

<p>インストール完了後、ターミナルで確認します。
.bash_profile に追記された script が実行されることでデフォルトのバージョンが変更されます。</p>

<p>```
$ ruby -v
ruby 1.8.7 (2011-12-28 patchlevel 357) [universal-darwin11.0]</p>

<p>$ source ~/.bash_profile</p>

<p>$ ruby -v
ruby 1.9.2p290 (2011-07-09 revision 32553) [x86_64-darwin11.4.0]
```</p>

<h2>Octopress のインストール</h2>

<p>git で Octopress のリポジトリを取得して、必要な gem をインストールします。
```
$ git clone git://github.com/imathis/octopress.git
Initialized empty Git repository in /path/to/octopress/.git/
remote: Counting objects: 7000, done.
remote: Compressing objects: 100% (2489/2489), done.
remote: Total 7000 (delta 4042), reused 6616 (delta 3867)
Receiving objects: 100% (7000/7000), 1.40 MiB | 284 KiB/s, done.
Resolving deltas: 100% (4042/4042), done.</p>

<p>$ cd octopress</p>

<p>$ gem install bundler
Fetching: bundler-1.1.4.gem (100%)
Successfully installed bundler-1.1.4
1 gem installed
Installing ri documentation for bundler-1.1.4...
Installing RDoc documentation for bundler-1.1.4...</p>

<p>$ bundle install
Fetching gem metadata from http://rubygems.org/.......
Using rake (0.9.2.2)
Installing RedCloth (4.2.9) with native extensions
Installing posix-spawn (0.3.6) with native extensions
Installing albino (1.3.3)
Installing blankslate (2.1.2.4)
Installing chunky_png (1.2.5)
Installing fast-stemmer (1.0.1) with native extensions
Installing classifier (1.3.3)
Installing fssm (0.2.9)
Installing sass (3.1.18)
Installing compass (0.12.1)
Installing directory_watcher (1.4.1)
Installing ffi (1.0.11) with native extensions
Installing haml (3.1.6)
Installing kramdown (0.13.6)
Installing liquid (2.3.0)
Installing syntax (1.0.0)
Installing maruku (0.6.0)
Installing jekyll (0.11.2)
Installing rubypython (0.5.3)
Installing pygments.rb (0.2.12)
Installing rack (1.4.1)
Installing rack-protection (1.2.0)
Installing rb-fsevent (0.9.1)
Installing rdiscount (1.6.8) with native extensions
Installing rubypants (0.2.0)
Installing tilt (1.3.3)
Installing sinatra (1.3.2)
Installing stringex (1.4.0)
Using bundler (1.1.4)
Your bundle is complete! Use <code>bundle show [gemname]</code> to see where a bundled gem is installed.
```
準備が出来たらインストールします。</p>

<p>```
$ rake install</p>

<h2>Copying classic theme into ./source and ./sass</h2>

<p>mkdir -p source
cp -r .themes/classic/source/. source
mkdir -p sass
cp -r .themes/classic/sass/. sass
mkdir -p source/_posts
mkdir -p public
```</p>

<h2>GitHub Pages のセットアップ</h2>

<p>GitHub Pages のリポジトリを追加します。</p>

<p><a href="https://github.com/new">こちら</a> から USERNAME.github.com のリポジトリを追加します。</p>

<p><img src="https://dl.dropbox.com/u/163758/blog/github-pages-setup.png" alt="GitHub Pages Setup" /></p>

<h2>GitHub Pages との関連付け</h2>

<p>以下の手順で、OctoPress を 用意した GitHub Pages と関連付けます。
<em>以降、USERNAME は GitHub のユーザー名に置き換えて入力します</em></p>

<p>```
$ rake setup_github_pages
Enter the read/write url for your repository: git@github.com:USERNAME/USERNAME.github.com.git
<em>(注:入力を求められますが、USERNAME を自身の ユーザー名に置き換えて入力します)</em>
Added remote git@github.com:USERNAME/USERNAME.github.com.git as origin
Set origin as default remote
Master branch renamed to 'source' for committing your blog source files
rm -rf <em>deploy
mkdir </em>deploy
cd <em>deploy
Initialized empty Git repository in /path/to/octopress/</em>deploy/.git/
[master (root-commit) 3f0b26e] Octopress init
 1 files changed, 1 insertions(+), 0 deletions(-)
 create mode 100644 index.html
cd -</p>

<h2>Now you can deploy to http://USERNAME.github.com with <code>rake deploy</code></h2>

<p>```</p>

<p>これで、指定した GitHub Pages に対する関連付けがなされました。</p>

<p>```
$ rake generate</p>

<h2>Generating Site with Jekyll</h2>

<p>directory source/stylesheets/
   create source/stylesheets/screen.css
Configuration from /path/to/octopress/_config.yml
Building site: source -> public
Successfully generated site: source -> public
```
<em>rake generate</em> で jekyll を用いた静的な HTML が生成されます。</p>

<p><code>
$ rake preview
Starting to watch source with Jekyll and Compass. Starting Rack on port 4000
Configuration from /path/to/octopress/_config.yml
</code>
GitHub に上げる前に、<a href="http://localhost:4000">http://localhost:4000</a>  でプレビュー出来ます。</p>

<p>ポストの追加等は行っていない状況ですが、プレビューが完了したら、先ずは、GitHub に上げてみます。
```
$ rake deploy</p>

<h2>Deploying branch to Github Pages</h2>

<p>rm -rf _deploy/index.html</p>

<h2>copying public to _deploy</h2>

<p>cp -r public/. <em>deploy
cd </em>deploy</p>

<h2>Commiting: Site updated at 2012-06-30 09:47:13 UTC</h2>

<p>[master af030a8] Site updated at 2012-06-30 09:47:13 UTC
 61 files changed, 2658 insertions(+), 1 deletions(-)
 create mode 100644 assets/jwplayer/glow/controlbar/background.png
 create mode 100644 assets/jwplayer/glow/controlbar/blankButton.png
 create mode 100644 assets/jwplayer/glow/controlbar/divider.png
 create mode 100644 assets/jwplayer/glow/controlbar/fullscreenButton.png
 create mode 100644 assets/jwplayer/glow/controlbar/fullscreenButtonOver.png
 create mode 100644 assets/jwplayer/glow/controlbar/muteButton.png
 create mode 100644 assets/jwplayer/glow/controlbar/muteButtonOver.png
 create mode 100644 assets/jwplayer/glow/controlbar/normalscreenButton.png
 create mode 100644 assets/jwplayer/glow/controlbar/normalscreenButtonOver.png
 create mode 100644 assets/jwplayer/glow/controlbar/pauseButton.png
 create mode 100644 assets/jwplayer/glow/controlbar/pauseButtonOver.png
 create mode 100644 assets/jwplayer/glow/controlbar/playButton.png
 create mode 100644 assets/jwplayer/glow/controlbar/playButtonOver.png
 create mode 100644 assets/jwplayer/glow/controlbar/timeSliderBuffer.png
 create mode 100644 assets/jwplayer/glow/controlbar/timeSliderCapLeft.png
 create mode 100644 assets/jwplayer/glow/controlbar/timeSliderCapRight.png
 create mode 100644 assets/jwplayer/glow/controlbar/timeSliderProgress.png
 create mode 100644 assets/jwplayer/glow/controlbar/timeSliderRail.png
 create mode 100644 assets/jwplayer/glow/controlbar/unmuteButton.png
 create mode 100644 assets/jwplayer/glow/controlbar/unmuteButtonOver.png
 create mode 100644 assets/jwplayer/glow/display/background.png
 create mode 100644 assets/jwplayer/glow/display/bufferIcon.png
 create mode 100644 assets/jwplayer/glow/display/muteIcon.png
 create mode 100644 assets/jwplayer/glow/display/playIcon.png
 create mode 100644 assets/jwplayer/glow/dock/button.png
 create mode 100644 assets/jwplayer/glow/glow.xml
 create mode 100644 assets/jwplayer/glow/playlist/item.png
 create mode 100644 assets/jwplayer/glow/playlist/itemOver.png
 create mode 100644 assets/jwplayer/glow/playlist/sliderCapBottom.png
 create mode 100644 assets/jwplayer/glow/playlist/sliderCapTop.png
 create mode 100644 assets/jwplayer/glow/playlist/sliderRail.png
 create mode 100644 assets/jwplayer/glow/playlist/sliderThumb.png
 create mode 100644 assets/jwplayer/glow/sharing/embedIcon.png
 create mode 100644 assets/jwplayer/glow/sharing/embedScreen.png
 create mode 100644 assets/jwplayer/glow/sharing/shareIcon.png
 create mode 100644 assets/jwplayer/glow/sharing/shareScreen.png
 create mode 100644 assets/jwplayer/player.swf
 create mode 100644 atom.xml
 create mode 100644 blog/archives/index.html
 create mode 100644 favicon.png
 create mode 100644 images/bird_32_gray.png
 create mode 100644 images/bird_32_gray_fail.png
 create mode 100644 images/code_bg.png
 create mode 100644 images/dotted-border.png
 create mode 100644 images/email.png
 create mode 100644 images/line-tile.png
 create mode 100644 images/noise.png
 create mode 100644 images/rss.png
 create mode 100644 images/search.png
 rewrite index.html (100%)
 create mode 100644 javascripts/ender.js
 create mode 100644 javascripts/github.js
 create mode 100644 javascripts/libs/ender.js
 create mode 100644 javascripts/libs/jXHR.js
 create mode 100644 javascripts/libs/swfobject-dynamic.js
 create mode 100644 javascripts/modernizr-2.0.js
 create mode 100644 javascripts/octopress.js
 create mode 100644 javascripts/pinboard.js
 create mode 100644 javascripts/twitter.js
 create mode 100644 sitemap.xml
 create mode 100644 stylesheets/screen.css</p>

<h2>Pushing generated _deploy website</h2>

<p>The authenticity of host 'github.com (207.97.227.239)' can't be established.
RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'github.com,207.97.227.239' (RSA) to the list of known hosts.
Permission denied (publickey).
fatal: The remote end hung up unexpectedly</p>

<h2>Github Pages deploy complete</h2>

<p>cd -
```
上記のような エラーが出た場合、公開鍵を GitHub に登録する必要があります。</p>

<h2>SSH 公開鍵の生成と登録</h2>

<p><a href="https://help.github.com/articles/generating-ssh-keys">Generating SSH Keys</a> が公式の説明なので合わせて参照します。</p>

<p>以下の手順で鍵を生成します。
<em>USERNAME@foobar.com</em> は GitHub の登録メールアドレスに読み替えて、入力します。
<code>
$ ssh-keygen -t rsa -C "USERNAME@foobar.com"
Generating public/private rsa key pair.
Enter file in which to save the key (/Users/username/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
(注:任意のパスフレーズを入力)
Your identification has been saved in /Users/username/.ssh/id_rsa.
Your public key has been saved in /Users/username/.ssh/id_rsa.pub.
The key fingerprint is:
xx:yy:zz:xx:yy:zz:xx:yy:zz:xx:yy:zz:xx:yy:zz:xx:yy:zz: USERNAME@foobar.com
</code>
~/.ssh/id_rsa.pub が生成された公開鍵です。
<code>
$ pbcopy &lt; ~/.ssh/id_rsa.pub
</code>
<em>pbcopy</em> でクリップボードに内容をコピーします。</p>

<p><img src="https://dl.dropbox.com/u/163758/blog/github-add-ssh-pubkey.png" alt="regist pbkey" /></p>

<p><a href="https://github.com/settings/ssh">設定</a> から、クリップボードにある公開鍵を Key 欄にペーストし、Add Key で登録します。</p>

<p>再度 <em>rake deploy</em> を実行してみましょう。
```
$ rake deploy</p>

<h2>Deploying branch to Github Pages</h2>

<p>rm -rf <em>deploy/assets
rm -rf </em>deploy/atom.xml
rm -rf <em>deploy/blog
rm -rf </em>deploy/favicon.png
rm -rf <em>deploy/images
rm -rf </em>deploy/index.html
rm -rf <em>deploy/javascripts
rm -rf </em>deploy/sitemap.xml
rm -rf _deploy/stylesheets</p>

<h2>copying public to _deploy</h2>

<p>cp -r public/. <em>deploy
cd </em>deploy</p>

<h2>Commiting: Site updated at 2012-06-30 10:05:05 UTC</h2>

<h1>On branch master</h1>

<p>nothing to commit (working directory clean)</p>

<h2>Pushing generated _deploy website</h2>

<p>Identity added: /Users/username/.ssh/id_rsa (/Users/username/.ssh/id_rsa)
Counting objects: 79, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (72/72), done.
Writing objects: 100% (79/79), 179.34 KiB, done.
Total 79 (delta 1), reused 0 (delta 0)
To git@github.com:USERNAME/USERNAME.github.com.git
 * [new branch]      master -> master</p>

<h2>Github Pages deploy complete</h2>

<p>cd -
```
今度はうまくいきました。
以上で、GitHub Pages の更新が行える環境が整いました。</p>

<h2>ブログの基本設定</h2>

<p>ブログのタイトル等、基本的な設定を行います。
_config.yml の、以下について修正します。</p>

<p><code>
url:                # For rewriting urls for RSS, etc
title:              # Used in the header and title tags
subtitle:           # A description used in the header
author:             # Your name, for RSS, Copyright, Metadata
simple_search:      # Search engine for simple site search
description:        # A default meta description for your site
subscribe_rss:      # Url for your blog's feed, defauts to /atom.xml
subscribe_email:    # Url to subscribe by email (service required)
email:              # Email address for the RSS feed if you want it.
</code>
その他の設定については、公式ドキュメント <a href="http://octopress.org/docs/configuring/">Configuring Octopress</a>  も参照します。</p>

<h2>新規投稿と更新</h2>

<p>```
$ rake new_post["install octopress"]</p>

<h1>Creates source/_posts/2012-06-30-install-octopress.markdown</h1>

<p>$ vi source/_posts/2012-06-30-install-octopress.markdown
```
タイトルを指定して <em>rake new_post</em> すると、マークダウンファイルが生成されます。</p>

<h2>```</h2>

<p>layout: post
title: OctoPress のインストール
date: 2012-06-30 2:59
comments: true</p>

<h2>categories: [octopress, install]</h2>

<p>記事本文
```
生成されたマークダウンファイルを修正、記事を書いて</p>

<p><code>
$ rake generate
$ rake preview
</code>
<a href="http://localhost:4000">http://localhost:4000</a>  でプレビュー。このときマークダウンファイルを修正すると、html が再 generate されるので、ブラウザのリロードで直ぐに修正を確認出来る。</p>

<p><code>
$ rake deploy
</code>
問題無ければデプロイします。</p>

<p>以上で、記事の作成可能な環境の、基本部分が整いました。</p>
]]></content>
  </entry>
  
</feed>
